name: Build FastGPT images for Aliyun

on:
  workflow_dispatch:
  push:
    paths:
      - "projects/app/**"
      - "packages/**"
    tags:
      - "*fastgpt*"
      
env:
  IMAGE_NAME: fastgpt                          # 镜像名（不含 registry 与 namespace）

jobs:
  build-fastgpt-images:
    permissions:
      contents: read
    strategy:
      matrix:
        sub_routes:
          - repo: fastgpt
            base_url: "/fastai"
          - repo: fastgpt-sub-route
            base_url: "/fastai"
          - repo: fastgpt-sub-route-gchat
            base_url: "/gchat"
        archs:
          - arch: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.archs.runs-on || 'ubuntu-24.04' }}
    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 设置Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      # 缓存Docker层
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.archs.arch }}-${{ matrix.sub_routes.repo }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.archs.arch }}-${{ matrix.sub_routes.repo }}-buildx-

      # 登录阿里云 ACR（从 Secrets 读取）
      - name: Log in to Alibaba Cloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY }}      # e.g. registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ACR_USERNAME }}      # 通常为 AccessKeyId
          password: ${{ secrets.ACR_PASSWORD }}      # 通常为 AccessKeySecret

      # 构建镜像
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: projects/app/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            ${{ matrix.sub_routes.base_url && format('base_url={0}', matrix.sub_routes.base_url) || '' }}
          push: true
          tags: |
            ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          # 可选缓存，加速后续构建（首次会慢）
          cache-from: type=registry,ref=${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=inline
